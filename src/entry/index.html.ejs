<!DOCTYPE html>
<html lang="zh-CN">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="x-ua-compatible" content="ie=edge">
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <title><%= htmlWebpackPlugin.options.title %></title>
    <!--[if lte IE 8]>
    <script>
        window.location.href='http://myqianlan.qiniudn.com/upgrade-your-browser.html?refer='+location.href;
    </script>
    <![endif]-->
    <script type="text/javascript">
        //动态引入JS文件
        var version1 = new Date().getTime();
        //TINET_TOOLBAR_URL定义工具条地址, 变量名称不能改
        var CCIC2_TOOLBAR_URL = "http://agent.clink.cn";
        document.write("<script src='"+CCIC2_TOOLBAR_URL+"/jws/sourceCode/ccic2Toolbar.js?version="+version1+"' charset='UTF-8'><\/script>");
    </script>


</head>
<body>

<div id="root"></div>
<% for (var asset in htmlWebpackPlugin.options.externalsAssets) { %>
<script src="<%= htmlWebpackPlugin.options.externalsAssets[asset] %>"></script>
<% } %>

<script>
    var orderCallbackCount = 0;

    function readyLoad(d){
    	//在这里登录
    	//login();
    }

    //----------- 回调函数 ------------
    /**
     * 登录回调 cbLogin
     * 返回json对象token:  {"type":"response","code":"0","msg":"ok","reqType":"login",
    	"sessionId":"812c16f96fa7f4bf34d75e07de4950bb", "hotline":"4006006001",
    	"enterpriseId":"3000000","cno":"2002", "cname":"test","bindTel":"01041005975","bindType":"1"}
     * code描述
    0 ：登录成功
    4 ：座席不在任何一个队列
    29 ：在线座席数超过并发限制
    23 ：默认自定义置忙状态配置错误
     * hotline 热线号码
     * enterpriseId 企业号
     * cno 座席工号
     * cname 座席姓名
     * bindTel 绑定电话
     * bindType 绑定电话类型
    */
    function cbLogin(token){//登陆
    	if(token.code == "0"){
    		// alert("登录成功");
        sendCallBack({ type:'login', token: token })

    		orderCallbackCount = token.allCallBackCount;
    		window.executeAction('doQueueStatus');//获取队列数据
    	} else{
    	  sendCallBack({ type:'loginFailed', token: token })
    	}
    }

    /**
     * 外呼回调 cbPreviewOutCall
     * 返回json对象token:  "type":"response","code":"0","msg":"ok","reqType":"previewOutCall"
     * code描述
    0  ：成功
    6  ：外呼失败，参数错误
    13 ：外呼失败，外呼号码格式错误
    20 ：外呼失败，呼叫范围受限
    25 ：外呼失败，此号码为黑名单
    26 ：外呼失败，座席没有外呼权限，请联系管理员
    27 ：外呼失败，余额不足
    28 ：外呼失败，没有路由
    */
    function cbPreviewOutCall(token) {  //外呼回调
      console.log('外呼+')
      console.log(token);
    }

    /**
     * 有预约回呼
    */
    function cbOrderCallBack(token) {
    	if(token.addORReduce == 1) {
    		orderCallbackCount++;
    	}
    	if(token.addORReduce == -1) {
    		orderCallbackCount--;
    	}
    }

    function cbLogout(token) {//退出
        if(buttType){
            token=JSON.parse(token);
        }
        if(token.code == "0"){
            sendCallBack({ type: 'logout', token: token })
        }
    }

    function cbThisStatus(token){ //状态回调：来电弹屏等
        if(buttType){
            token=JSON.parse(token);
        }
        sendCallBack({ type: 'status', token: token })

    }

    function consult(){ // 咨询
    	var consultText = document.getElementById("consultText").value;
    	if(consultText == ''){
    		alert("号码不能为空");
    	}else {
    		var obj = {};
    		obj.consultObject = consultText;
    		obj.objectType = document.getElementById("consultType").value;
    		window.executeAction('doConsult',  obj);
    	}
    }

    function transfer(){ //
    	var transferText = document.getElementById("transferText").value;
    	var obj = {};
    	obj.transferObject = transferText;
    	obj.objectType = document.getElementById("transferType").value;
    	window.executeAction('doTransfer', obj);
    }

    function consultCancel(){ // 取消咨询
    	window.executeAction('doConsultCancel');
    }

    function cbQueueStatus(data){ //得到队列数据
      sendCallBack({ type: 'queueStatus', data: data })
    }

    function cbStatus(json){ //改变队列座席状态
    	var status = window.deviceStatus.deviceStatusLoginStatus(json.deviceStatus+json.loginStatus, json.pauseDescription, json.busyDescription);
    }

    function qMonitoring(qid){ //获取队列数据
    	window.executeAction('doQueueStatus');
    }


    function cbQueue(json){ // 队列回调
    	if(json.customerNumber != undefined && json.customerNumber == 'unknown_number'){//转义未知号码
    		json.customerNumber ='未知号码';
    	}
      sendCallBack({ type: 'queue', json: json })
    }


    function cbWelcome(token) { //连接成功

    }

   function sendCallBack(callback) {
      window.callback = callback
      document.getElementById(`bridging-btn`).click()
   }

</script>
</body>
</html>
